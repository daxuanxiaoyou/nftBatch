/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BatchTransfer, BatchTransferInterface } from "../BatchTransfer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "Nft_addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "transferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "Nft_addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferSingle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61116c806101146000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063150b7a02146100675780634718521d14610097578063715018a6146100b35780638da5cb5b146100bd578063cba318a2146100db578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c9190610b58565b610113565b60405161008e9190610d24565b60405180910390f35b6100b160048036038101906100ac9190610a5a565b610140565b005b6100bb61036c565b005b6100c56103f4565b6040516100d29190610cd2565b60405180910390f35b6100f560048036038101906100f09190610abd565b61041d565b005b610111600480360381019061010c9190610a31565b610747565b005b60007f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f9050949350505050565b60026001541415610186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017d90610ddf565b60405180910390fd5b600260018190555061019661083f565b73ffffffffffffffffffffffffffffffffffffffff166101b46103f4565b73ffffffffffffffffffffffffffffffffffffffff161461020a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020190610d7f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561027a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027190610d9f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e190610dbf565b60405180910390fd5b60008490508073ffffffffffffffffffffffffffffffffffffffff166342842e0e8585856040518463ffffffff1660e01b815260040161032c93929190610ced565b600060405180830381600087803b15801561034657600080fd5b505af115801561035a573d6000803e3d6000fd5b50505050506001808190555050505050565b61037461083f565b73ffffffffffffffffffffffffffffffffffffffff166103926103f4565b73ffffffffffffffffffffffffffffffffffffffff16146103e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103df90610d7f565b60405180910390fd5b6103f26000610847565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026001541415610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a90610ddf565b60405180910390fd5b600260018190555061047361083f565b73ffffffffffffffffffffffffffffffffffffffff166104916103f4565b73ffffffffffffffffffffffffffffffffffffffff16146104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90610d7f565b60405180910390fd5b81819050848490501461052f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052690610d5f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059690610d9f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561060f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060690610dbf565b60405180910390fd5b6000848490509050600087905060005b82811015610735578173ffffffffffffffffffffffffffffffffffffffff166342842e0e8989898581811061067d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906106929190610a31565b8888868181106106cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201356040518463ffffffff1660e01b81526004016106f093929190610ced565b600060405180830381600087803b15801561070a57600080fd5b505af115801561071e573d6000803e3d6000fd5b50505050808061072d90610f0e565b91505061061f565b50505060018081905550505050505050565b61074f61083f565b73ffffffffffffffffffffffffffffffffffffffff1661076d6103f4565b73ffffffffffffffffffffffffffffffffffffffff16146107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90610d7f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a90610d3f565b60405180910390fd5b61083c81610847565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061091e61091984610e24565b610dff565b90508281526020810184848401111561093657600080fd5b610941848285610ece565b509392505050565b60008135905061095881611108565b92915050565b60008083601f84011261097057600080fd5b8235905067ffffffffffffffff81111561098957600080fd5b6020830191508360208202830111156109a157600080fd5b9250929050565b60008083601f8401126109ba57600080fd5b8235905067ffffffffffffffff8111156109d357600080fd5b6020830191508360208202830111156109eb57600080fd5b9250929050565b600082601f830112610a0357600080fd5b8135610a1384826020860161090b565b91505092915050565b600081359050610a2b8161111f565b92915050565b600060208284031215610a4357600080fd5b6000610a5184828501610949565b91505092915050565b60008060008060808587031215610a7057600080fd5b6000610a7e87828801610949565b9450506020610a8f87828801610949565b9350506040610aa087828801610949565b9250506060610ab187828801610a1c565b91505092959194509250565b60008060008060008060808789031215610ad657600080fd5b6000610ae489828a01610949565b9650506020610af589828a01610949565b955050604087013567ffffffffffffffff811115610b1257600080fd5b610b1e89828a0161095e565b9450945050606087013567ffffffffffffffff811115610b3d57600080fd5b610b4989828a016109a8565b92509250509295509295509295565b60008060008060808587031215610b6e57600080fd5b6000610b7c87828801610949565b9450506020610b8d87828801610949565b9350506040610b9e87828801610a1c565b925050606085013567ffffffffffffffff811115610bbb57600080fd5b610bc7878288016109f2565b91505092959194509250565b610bdc81610e66565b82525050565b610beb81610e78565b82525050565b6000610bfe602683610e55565b9150610c0982610fc6565b604082019050919050565b6000610c21602983610e55565b9150610c2c82611015565b604082019050919050565b6000610c44602083610e55565b9150610c4f82611064565b602082019050919050565b6000610c67601b83610e55565b9150610c728261108d565b602082019050919050565b6000610c8a601e83610e55565b9150610c95826110b6565b602082019050919050565b6000610cad601f83610e55565b9150610cb8826110df565b602082019050919050565b610ccc81610ec4565b82525050565b6000602082019050610ce76000830184610bd3565b92915050565b6000606082019050610d026000830186610bd3565b610d0f6020830185610bd3565b610d1c6040830184610cc3565b949350505050565b6000602082019050610d396000830184610be2565b92915050565b60006020820190508181036000830152610d5881610bf1565b9050919050565b60006020820190508181036000830152610d7881610c14565b9050919050565b60006020820190508181036000830152610d9881610c37565b9050919050565b60006020820190508181036000830152610db881610c5a565b9050919050565b60006020820190508181036000830152610dd881610c7d565b9050919050565b60006020820190508181036000830152610df881610ca0565b9050919050565b6000610e09610e1a565b9050610e158282610edd565b919050565b6000604051905090565b600067ffffffffffffffff821115610e3f57610e3e610f86565b5b610e4882610fb5565b9050602081019050919050565b600082825260208201905092915050565b6000610e7182610ea4565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610ee682610fb5565b810181811067ffffffffffffffff82111715610f0557610f04610f86565b5b80604052505050565b6000610f1982610ec4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f4c57610f4b610f57565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4572726f723a2074686520746f206c656e677468206d757374206d617463682060008201527f746f6b656e4964732e0000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4572726f723a20696e76616c6964206e667420616464726573732e0000000000600082015250565b7f4572726f723a20696e76616c69642073656e64657220616464726573732e0000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61111181610e66565b811461111c57600080fd5b50565b61112881610ec4565b811461113357600080fd5b5056fea26469706673582212202fc5ced83b0a2e4915056eb23d460a3463cb33889f11d86c7a4abf003452be4764736f6c63430008040033";

export class BatchTransfer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchTransfer> {
    return super.deploy(overrides || {}) as Promise<BatchTransfer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BatchTransfer {
    return super.attach(address) as BatchTransfer;
  }
  connect(signer: Signer): BatchTransfer__factory {
    return super.connect(signer) as BatchTransfer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchTransferInterface {
    return new utils.Interface(_abi) as BatchTransferInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchTransfer {
    return new Contract(address, _abi, signerOrProvider) as BatchTransfer;
  }
}
