/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BatchTransfer, BatchTransferInterface } from "../BatchTransfer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "Nft_addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "transferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "Nft_addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferSingle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113ce806101146000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063150b7a02146100675780634718521d14610097578063715018a6146100b35780638da5cb5b146100bd578063cba318a2146100db578063f2fde38b146100f7575b600080fd5b610081600480360381019061007c9190610c2a565b610113565b60405161008e9190610f36565b60405180910390f35b6100b160048036038101906100ac9190610b2c565b610140565b005b6100bb6103d3565b005b6100c561045b565b6040516100d29190610e80565b60405180910390f35b6100f560048036038101906100f09190610b8f565b610484565b005b610111600480360381019061010c9190610b03565b610819565b005b60007f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f9050949350505050565b60026001541415610186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017d90610ff1565b60405180910390fd5b6002600181905550610196610911565b73ffffffffffffffffffffffffffffffffffffffff166101b461045b565b73ffffffffffffffffffffffffffffffffffffffff161461020a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020190610f91565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561027a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027190610fb1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e190610fd1565b60405180910390fd5b60008490508073ffffffffffffffffffffffffffffffffffffffff166342842e0e8585856040518463ffffffff1660e01b815260040161032c93929190610e9b565b600060405180830381600087803b15801561034657600080fd5b505af115801561035a573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f9e6acd20e3f2497dbc8f7c785e2922c6550e2c7182ab2da2637b302b65b416fd85856040516103bd929190610ed2565b60405180910390a3506001808190555050505050565b6103db610911565b73ffffffffffffffffffffffffffffffffffffffff166103f961045b565b73ffffffffffffffffffffffffffffffffffffffff161461044f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044690610f91565b60405180910390fd5b6104596000610919565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260015414156104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c190610ff1565b60405180910390fd5b60026001819055506104da610911565b73ffffffffffffffffffffffffffffffffffffffff166104f861045b565b73ffffffffffffffffffffffffffffffffffffffff161461054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054590610f91565b60405180910390fd5b818190508484905014610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90610f71565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610606576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fd90610fb1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90610fd1565b60405180910390fd5b6000848490509050600087905060005b8281101561079c578173ffffffffffffffffffffffffffffffffffffffff166342842e0e898989858181106106e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906106f99190610b03565b888886818110610732577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201356040518463ffffffff1660e01b815260040161075793929190610e9b565b600060405180830381600087803b15801561077157600080fd5b505af1158015610785573d6000803e3d6000fd5b50505050808061079490611170565b915050610686565b508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f9055ac4cd551c5bee4e8483a1cbef861107c0c49f45cf29da27e3c28a28e8b9a888888886040516108009493929190610efb565b60405180910390a3505060018081905550505050505050565b610821610911565b73ffffffffffffffffffffffffffffffffffffffff1661083f61045b565b73ffffffffffffffffffffffffffffffffffffffff1614610895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088c90610f91565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc90610f51565b60405180910390fd5b61090e81610919565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006109f06109eb84611036565b611011565b905082815260208101848484011115610a0857600080fd5b610a13848285611130565b509392505050565b600081359050610a2a8161136a565b92915050565b60008083601f840112610a4257600080fd5b8235905067ffffffffffffffff811115610a5b57600080fd5b602083019150836020820283011115610a7357600080fd5b9250929050565b60008083601f840112610a8c57600080fd5b8235905067ffffffffffffffff811115610aa557600080fd5b602083019150836020820283011115610abd57600080fd5b9250929050565b600082601f830112610ad557600080fd5b8135610ae58482602086016109dd565b91505092915050565b600081359050610afd81611381565b92915050565b600060208284031215610b1557600080fd5b6000610b2384828501610a1b565b91505092915050565b60008060008060808587031215610b4257600080fd5b6000610b5087828801610a1b565b9450506020610b6187828801610a1b565b9350506040610b7287828801610a1b565b9250506060610b8387828801610aee565b91505092959194509250565b60008060008060008060808789031215610ba857600080fd5b6000610bb689828a01610a1b565b9650506020610bc789828a01610a1b565b955050604087013567ffffffffffffffff811115610be457600080fd5b610bf089828a01610a30565b9450945050606087013567ffffffffffffffff811115610c0f57600080fd5b610c1b89828a01610a7a565b92509250509295509295509295565b60008060008060808587031215610c4057600080fd5b6000610c4e87828801610a1b565b9450506020610c5f87828801610a1b565b9350506040610c7087828801610aee565b925050606085013567ffffffffffffffff811115610c8d57600080fd5b610c9987828801610ac4565b91505092959194509250565b6000610cb18383610cbd565b60208301905092915050565b610cc6816110c8565b82525050565b610cd5816110c8565b82525050565b6000610ce7838561107e565b9350610cf282611067565b8060005b85811015610d2b57610d0882846110b1565b610d128882610ca5565b9750610d1d83611071565b925050600181019050610cf6565b5085925050509392505050565b6000610d44838561108f565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610d7357600080fd5b602083029250610d84838584611130565b82840190509392505050565b610d99816110da565b82525050565b6000610dac6026836110a0565b9150610db782611228565b604082019050919050565b6000610dcf6029836110a0565b9150610dda82611277565b604082019050919050565b6000610df26020836110a0565b9150610dfd826112c6565b602082019050919050565b6000610e15601b836110a0565b9150610e20826112ef565b602082019050919050565b6000610e38601e836110a0565b9150610e4382611318565b602082019050919050565b6000610e5b601f836110a0565b9150610e6682611341565b602082019050919050565b610e7a81611126565b82525050565b6000602082019050610e956000830184610ccc565b92915050565b6000606082019050610eb06000830186610ccc565b610ebd6020830185610ccc565b610eca6040830184610e71565b949350505050565b6000604082019050610ee76000830185610ccc565b610ef46020830184610e71565b9392505050565b60006040820190508181036000830152610f16818688610cdb565b90508181036020830152610f2b818486610d38565b905095945050505050565b6000602082019050610f4b6000830184610d90565b92915050565b60006020820190508181036000830152610f6a81610d9f565b9050919050565b60006020820190508181036000830152610f8a81610dc2565b9050919050565b60006020820190508181036000830152610faa81610de5565b9050919050565b60006020820190508181036000830152610fca81610e08565b9050919050565b60006020820190508181036000830152610fea81610e2b565b9050919050565b6000602082019050818103600083015261100a81610e4e565b9050919050565b600061101b61102c565b9050611027828261113f565b919050565b6000604051905090565b600067ffffffffffffffff821115611051576110506111e8565b5b61105a82611217565b9050602081019050919050565b6000819050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110c06020840184610a1b565b905092915050565b60006110d382611106565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b61114882611217565b810181811067ffffffffffffffff82111715611167576111666111e8565b5b80604052505050565b600061117b82611126565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111ae576111ad6111b9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4572726f723a2074686520746f206c656e677468206d757374206d617463682060008201527f746f6b656e4964732e0000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4572726f723a20696e76616c6964206e667420616464726573732e0000000000600082015250565b7f4572726f723a20696e76616c69642073656e64657220616464726573732e0000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b611373816110c8565b811461137e57600080fd5b50565b61138a81611126565b811461139557600080fd5b5056fea2646970667358221220ad44b966bf8e0bada0a6527ab21b2692bd30fd20e106e51070170e282f73876e64736f6c63430008040033";

export class BatchTransfer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchTransfer> {
    return super.deploy(overrides || {}) as Promise<BatchTransfer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BatchTransfer {
    return super.attach(address) as BatchTransfer;
  }
  connect(signer: Signer): BatchTransfer__factory {
    return super.connect(signer) as BatchTransfer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchTransferInterface {
    return new utils.Interface(_abi) as BatchTransferInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchTransfer {
    return new Contract(address, _abi, signerOrProvider) as BatchTransfer;
  }
}
